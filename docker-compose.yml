name: yesno-fortune-app

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: yesno
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d yesno -h 127.0.0.1 -p 5432"]
      interval: 3s
      timeout: 3s
      retries: 30

  api:
    build:
      context: .
      dockerfile: server/Dockerfile
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: yesno
      POSTGRES_PORT: 5432
      API_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    # （任意）ヘルスチェックを付けると依存側の監視が楽
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/api/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  web:
    build:
      context: .
      args:
        - VITE_API_ORIGIN=http://localhost:8080
    ports:
      - "5173:5173"
    depends_on:
      - api
    restart: unless-stopped
    # /api へのアクセスは存在しない静的ファイルとして扱われ、下記へフォールバックでプロキシされる
    command: sh -lc "npx http-server dist -p 5173 -a 0.0.0.0 -P http://api:8080"

volumes:
  db-data:
